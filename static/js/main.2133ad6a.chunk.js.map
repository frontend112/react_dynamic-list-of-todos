{"version":3,"sources":["components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","api.ts","App.tsx","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","index.tsx"],"names":["TodoList","visibleTodos","handleSelectButtonClick","selectedButtonId","className","map","id","title","completed","cn","type","onClick","TodoFilter","memo","searchInput","selectedStatus","handleChangeSearchInput","handleRemoveSearchInput","onStatusChange","value","onChange","placeholder","style","pointerEvents","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","Filter","Loader","TodoModal","handleCloseModal","recentTodo","useState","user","setUser","userId","useEffect","getUser","href","email","name","App","todos","setTodos","setSearchInput","ALL","setSelectedStatus","setSelectedButtonId","getVisibleTodos","filter","prevTodo","isTitleContainInput","toLocaleLowerCase","includes","event","target","length","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2133ad6a.chunk.js","sourcesContent":["import { FC } from 'react';\n\nimport cn from 'classnames';\n\nimport { Todo } from '../../types/Todo';\n\ninterface Props {\n  visibleTodos: Todo[];\n  handleSelectButtonClick: (id: number) => void;\n  selectedButtonId: number | null;\n}\n\nexport const TodoList: FC<Props> = ({\n  visibleTodos,\n  handleSelectButtonClick,\n  selectedButtonId,\n}) => (\n  <table className=\"table is-narrow is-fullwidth\">\n    <thead>\n      <tr>\n        <th>#</th>\n        <th>\n          <span className=\"icon\">\n            <i className=\"fas fa-check\" />\n          </span>\n        </th>\n        <th>Title</th>\n        <th> </th>\n      </tr>\n    </thead>\n    <tbody>\n      {\n        visibleTodos.map(({\n          id,\n          title,\n          completed,\n        }) => (\n          <tr\n            data-cy=\"todo\"\n            key={title}\n          >\n            <td className=\"is-vcentered\">{id}</td>\n            <td className=\"is-vcentered\">\n              {\n                completed\n                && (\n                  <span className=\"icon\" data-cy=\"iconCompleted\">\n                    <i className=\"fas fa-check\" />\n                  </span>\n                )\n              }\n            </td>\n            <td className=\"is-vcentered isexpanded\">\n              <p\n                className={cn({\n                  'has-text-success': completed,\n                  'has-text-danger': !completed,\n                })}\n              >\n                {title}\n              </p>\n            </td>\n            <td className=\"has-text-right is-vcentered\">\n              <button\n                data-cy=\"selectButton\"\n                className=\"button\"\n                type=\"button\"\n                onClick={() => handleSelectButtonClick(id)}\n              >\n                <span className=\"icon\">\n                  <i className={cn(\n                    'far',\n                    {\n                      'fa-eye': id !== selectedButtonId,\n                      'fa-eye-slash': id === selectedButtonId,\n                    },\n                  )}\n                  />\n                </span>\n              </button>\n            </td>\n          </tr>\n        ))\n      }\n    </tbody>\n  </table>\n);\n","import {\n  ChangeEvent,\n  FC,\n  memo,\n} from 'react';\n\ninterface Props {\n  searchInput: string;\n  selectedStatus: string;\n  handleChangeSearchInput: (e: ChangeEvent<HTMLInputElement>) => void;\n  handleRemoveSearchInput: () => void;\n  onStatusChange: (event: ChangeEvent<HTMLSelectElement>) => void;\n}\n\nexport const TodoFilter: FC<Props> = memo(\n  ({\n    searchInput,\n    selectedStatus,\n    handleChangeSearchInput,\n    handleRemoveSearchInput,\n    onStatusChange,\n  }) => {\n    return (\n      <form className=\"field has-addons\">\n        <p className=\"control\">\n          <span className=\"select\">\n            <select\n              data-cy=\"statusSelect\"\n              value={selectedStatus}\n              onChange={onStatusChange}\n            >\n              <option value=\"all\">All</option>\n              <option value=\"active\">Active</option>\n              <option value=\"completed\">Completed</option>\n            </select>\n          </span>\n        </p>\n\n        <p className=\"control is-expanded has-icons-left has-icons-right\">\n          <input\n            data-cy=\"searchInput\"\n            type=\"text\"\n            className=\"input\"\n            placeholder=\"Search...\"\n            value={searchInput}\n            onChange={handleChangeSearchInput}\n          />\n          <span className=\"icon is-left\">\n            <i className=\"fas fa-magnifying-glass\" />\n          </span>\n\n          {\n            searchInput\n            && (\n              <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n                {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n                <button\n                  data-cy=\"clearSearchButton\"\n                  type=\"button\"\n                  className=\"delete\"\n                  onClick={handleRemoveSearchInput}\n                />\n              </span>\n            )\n          }\n        </p>\n      </form>\n    );\n  },\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nexport function wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","/* eslint-disable max-len */\nimport React, {\n  ChangeEvent,\n  useEffect,\n  useState,\n} from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { getTodos } from './api';\nimport { Todo } from './types/Todo';\nimport { Loader } from './components/Loader';\nimport { TodoModal } from './components/TodoModal';\n\nenum Filter {\n  ALL = 'all',\n  ACTIVE = 'active',\n  COMPLETED = 'completed',\n}\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n\n  const [searchInput, setSearchInput] = useState('');\n  const [selectedStatus, setSelectedStatus] = useState<string>(Filter.ALL);\n\n  const [selectedButtonId, setSelectedButtonId] = useState(0);\n\n  useEffect(() => {\n    getTodos().then(setTodos);\n  }, []);\n\n  const getVisibleTodos = todos.filter(prevTodo => {\n    const isTitleContainInput = prevTodo.title.toLocaleLowerCase()\n      .includes(searchInput.toLocaleLowerCase());\n\n    if (selectedStatus === 'active' && isTitleContainInput) {\n      return !prevTodo.completed;\n    }\n\n    if (selectedStatus === 'completed' && isTitleContainInput) {\n      return prevTodo.completed;\n    }\n\n    return isTitleContainInput;\n  });\n\n  const handleChangeSearchInput = (event: ChangeEvent<HTMLInputElement>) => {\n    const { value } = event.target;\n\n    setSearchInput(value);\n  };\n\n  const onStatusChange = (event: ChangeEvent<HTMLSelectElement>) => {\n    const { value } = event.target;\n\n    setSelectedStatus(value);\n  };\n\n  const handleRemoveSearchInput = () => setSearchInput('');\n\n  const handleSelectButtonClick = (id: number) => setSelectedButtonId(id);\n\n  const handleCloseModal = () => setSelectedButtonId(0);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                searchInput={searchInput}\n                selectedStatus={selectedStatus}\n                handleChangeSearchInput={handleChangeSearchInput}\n                handleRemoveSearchInput={handleRemoveSearchInput}\n                onStatusChange={onStatusChange}\n              />\n            </div>\n\n            <div className=\"block\">\n              {\n                todos.length === 0\n                  ? <Loader />\n                  : (\n                    <TodoList\n                      visibleTodos={getVisibleTodos}\n                      handleSelectButtonClick={handleSelectButtonClick}\n                      selectedButtonId={selectedButtonId}\n                    />\n                  )\n              }\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {\n        selectedButtonId > 0\n        && (\n          <TodoModal\n            recentTodo={todos[selectedButtonId - 1]}\n            handleCloseModal={handleCloseModal}\n            selectedButtonId={selectedButtonId}\n          />\n        )\n      }\n    </>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { FC, useEffect, useState } from 'react';\nimport cn from 'classnames';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\nimport { Loader } from '../Loader';\nimport { getUser } from '../../api';\n\ninterface Props {\n  handleCloseModal: () => void;\n  selectedButtonId: number;\n  recentTodo: Todo;\n}\nexport const TodoModal: FC<Props> = ({\n  handleCloseModal,\n  selectedButtonId,\n  recentTodo,\n}) => {\n  const [user, setUser] = useState<User | null>(null);\n\n  const {\n    userId,\n    id,\n    title,\n    completed,\n  } = recentTodo;\n\n  useEffect(() => {\n    getUser(userId).then(setUser);\n  }, [selectedButtonId]);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n      {\n        user\n          ? (\n            <div className=\"modal-card\">\n              <header className=\"modal-card-head\">\n                <div\n                  className=\"modal-card-title has-text-weight-medium\"\n                  data-cy=\"modal-header\"\n                >\n                  {`Todo #${id}`}\n                </div>\n\n                {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n                <button\n                  type=\"button\"\n                  className=\"delete\"\n                  data-cy=\"modal-close\"\n                  onClick={handleCloseModal}\n                />\n              </header>\n\n              <div className=\"modal-card-body\">\n                <p className=\"block\" data-cy=\"modal-title\">\n                  {title}\n                </p>\n\n                <p className=\"block\" data-cy=\"modal-user\">\n                  <strong className={cn(\n                    { 'has-text-success': completed },\n                    { 'has-text-danger': !completed },\n                  )}\n                  >\n                    {\n                      completed\n                        ? 'Done'\n                        : 'Planned'\n                    }\n                  </strong>\n                  {' by '}\n\n                  <a href={`mailto:${user.email}`}>{user.name}</a>\n                </p>\n              </div>\n            </div>\n          )\n          : <Loader />\n      }\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}