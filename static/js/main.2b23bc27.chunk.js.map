{"version":3,"sources":["components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","api.ts","components/Loader/Loader.tsx","App.tsx","index.tsx"],"names":["TodoList","visibleTodos","handleSelectButtonClick","selectedButton","className","map","id","title","completed","cn","type","onClick","TodoFilter","searchInput","selectedStatus","handleChangeSearchInput","handleRemoveSearchInput","onStatusChange","value","onChange","placeholder","style","pointerEvents","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","Loader","App","useState","todos","setTodos","setVisibleTodos","setSearchInput","setSelectedStatus","setSelectedButton","useEffect","result","changeVisibleTodos","recentInput","recentStatus","filter","prevTodo","includes","event","target","toLocaleLowerCase","length","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2b23bc27.chunk.js","sourcesContent":["import { FC } from 'react';\n\nimport cn from 'classnames';\n\nimport { Todo } from '../../types/Todo';\n\ninterface Props {\n  visibleTodos: Todo[];\n  handleSelectButtonClick: (id: number) => void;\n  selectedButton: number | null;\n}\n\nexport const TodoList: FC<Props> = ({\n  visibleTodos,\n  handleSelectButtonClick,\n  selectedButton,\n}) => {\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n      <tbody>\n        {\n          visibleTodos.map(({\n            id,\n            title,\n            completed,\n          }) => (\n            <tr\n              data-cy=\"todo\"\n              key={title}\n              // className=\"has-background-info-light\"\n            >\n              <td className=\"is-vcentered\">{id}</td>\n              <td className=\"is-vcentered\">\n                {\n                  completed\n                  && (\n                    <span className=\"icon\" data-cy=\"iconCompleted\">\n                      <i className=\"fas fa-check\" />\n                    </span>\n                  )\n                }\n              </td>\n              <td className=\"is-vcentered isexpanded\">\n                <p\n                  className={cn({\n                    'has-text-success': completed,\n                    'has-text-danger': !completed,\n                  })}\n                >\n                  {title}\n                </p>\n              </td>\n              <td className=\"has-text-right is-vcentered\">\n                <button\n                  data-cy=\"selectButton\"\n                  className=\"button\"\n                  type=\"button\"\n                  onClick={() => handleSelectButtonClick(id)}\n                >\n                  <span className=\"icon\">\n                    <i className={cn(\n                      'far',\n                      {\n                        'fa-eye': id !== selectedButton,\n                        'fa-eye-slash': id === selectedButton,\n                      },\n                    )}\n                    />\n                  </span>\n                </button>\n              </td>\n            </tr>\n          ))\n        }\n      </tbody>\n    </table>\n  );\n};\n","import { ChangeEvent, FC } from 'react';\n\ninterface Props {\n  searchInput: string;\n  selectedStatus: string;\n  handleChangeSearchInput: (e: ChangeEvent<HTMLInputElement>) => void;\n  handleRemoveSearchInput: () => void;\n  onStatusChange: (e: ChangeEvent<HTMLSelectElement>) => void;\n}\n\nexport const TodoFilter: FC<Props> = ({\n  searchInput,\n  selectedStatus,\n  handleChangeSearchInput,\n  handleRemoveSearchInput,\n  onStatusChange,\n}) => (\n  <form className=\"field has-addons\">\n    <p className=\"control\">\n      <span className=\"select\">\n        <select\n          data-cy=\"statusSelect\"\n          value={selectedStatus}\n          onChange={onStatusChange}\n        >\n          <option value=\"all\">All</option>\n          <option value=\"active\">Active</option>\n          <option value=\"completed\">Completed</option>\n        </select>\n      </span>\n    </p>\n\n    <p className=\"control is-expanded has-icons-left has-icons-right\">\n      <input\n        data-cy=\"searchInput\"\n        type=\"text\"\n        className=\"input\"\n        placeholder=\"Search...\"\n        value={searchInput}\n        onChange={handleChangeSearchInput}\n      />\n      <span className=\"icon is-left\">\n        <i className=\"fas fa-magnifying-glass\" />\n      </span>\n\n      {\n        searchInput !== ''\n        && (\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={handleRemoveSearchInput}\n            />\n          </span>\n        )\n      }\n    </p>\n  </form>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nexport function wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","/* eslint-disable max-len */\nimport React, {\n  ChangeEvent, useEffect, useState,\n} from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { getTodos } from './api';\nimport { Todo } from './types/Todo';\nimport { Loader } from './components/Loader';\n// import { TodoModal } from './components/TodoModal';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[] | []>([]);\n  const [visibleTodos, setVisibleTodos] = useState<Todo[] | []>([]);\n\n  const [searchInput, setSearchInput] = useState('');\n  const [selectedStatus, setSelectedStatus] = useState('all');\n\n  const [selectedButton, setSelectedButton] = useState(0);\n\n  useEffect(() => {\n    getTodos().then(result => {\n      setTodos(result);\n      setVisibleTodos(result);\n    });\n  }, []);\n\n  const changeVisibleTodos = (recentInput: string, recentStatus: string) => {\n    setVisibleTodos(todos.filter(prevTodo => {\n      if (recentStatus === 'active') {\n        return !prevTodo.completed\n          && prevTodo.title.includes(recentInput);\n      }\n\n      if (recentStatus === 'completed') {\n        return !prevTodo.completed\n          && prevTodo.title.includes(recentInput);\n      }\n\n      return prevTodo.title.includes(recentInput);\n    }));\n  };\n\n  const handleChangeSearchInput = (event: ChangeEvent<HTMLInputElement>) => {\n    const { value } = event.target;\n\n    setSearchInput(value);\n\n    changeVisibleTodos(\n      value.toLocaleLowerCase(),\n      selectedStatus.toLocaleLowerCase(),\n    );\n  };\n\n  const onStatusChange = (event: ChangeEvent<HTMLSelectElement>) => {\n    const { value } = event.target;\n\n    setSelectedStatus(value);\n\n    changeVisibleTodos(\n      searchInput.toLocaleLowerCase(),\n      value.toLocaleLowerCase(),\n    );\n  };\n\n  const handleRemoveSearchInput = () => {\n    setSearchInput('');\n    setVisibleTodos(todos);\n  };\n\n  const handleSelectButtonClick = (id: number) => {\n    setSelectedButton(id);\n  };\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                searchInput={searchInput}\n                selectedStatus={selectedStatus}\n                handleChangeSearchInput={handleChangeSearchInput}\n                handleRemoveSearchInput={handleRemoveSearchInput}\n                onStatusChange={onStatusChange}\n              />\n            </div>\n\n            <div className=\"block\">\n              {\n                todos.length === 0\n                && <Loader />\n              }\n              <TodoList\n                visibleTodos={visibleTodos}\n                handleSelectButtonClick={handleSelectButtonClick}\n                selectedButton={selectedButton}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* <TodoModal /> */}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}